version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    security_opt:
      - seccomp:unconfined  # Cho phép debug và monitoring
    cap_add:
      - SYS_NICE           # Cho phép điều chỉnh nice priority
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_REPLICATION_USER=${MYSQL_REPLICATION_USER}
      - MYSQL_REPLICATION_PASSWORD=${MYSQL_REPLICATION_PASSWORD}
      - TZ=${TZ}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/config/my.cnf:/etc/mysql/my.cnf:ro
      - ./mysql/config/mysql-healthcheck.sh:/usr/local/bin/mysql-healthcheck:ro
      - ./mysql/backup:/backup
      - ./mysql/init:/docker-entrypoint-initdb.d
      - mysql_logs:/var/lib/mysql
    networks:
      - mysql_network
    healthcheck:
      test: ["CMD", "/usr/local/bin/mysql-healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  mysql_backup:
    image: alpine:latest
    container_name: mysql_backup
    volumes:
      - ./mysql/backup:/backup
      - ./mysql/backup/scripts:/scripts
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS}
    command: sh -c "/scripts/backup.sh"
    depends_on:
      - mysql
    networks:
      - mysql_network

  mysql_exporter:
    image: prom/mysqld-exporter:latest
    container_name: mysql_exporter
    ports:
      - "9104:9104"
    environment:
      - DATA_SOURCE_NAME=root:${MYSQL_ROOT_PASSWORD}@(mysql:3306)/
    networks:
      - mysql_network
    depends_on:
      - mysql

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - mysql_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin_password
    networks:
      - mysql_network
    depends_on:
      - prometheus

networks:
  mysql_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  mysql_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local